/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas;

import controlador.AlumnoData;
import controlador.InscripcionData;
import controlador.MateriaData;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import modelo.Alumno;
import modelo.Conexion;
import modelo.Inscripcion;
import modelo.Materia;

/**
 *
 * @author Caro_Z
 */
public class ViewConsultasNotasDeAlumnos extends javax.swing.JInternalFrame {

    private ArrayList<Alumno> listAlumnos;
    private AlumnoData ad;
    private ArrayList<Inscripcion> listaInscripcion;
   
    private InscripcionData id;
    private ArrayList<Materia> listaMaterias;
    private MateriaData md;
    private Conexion conexion;
    private DefaultTableModel modelo1;

    public ViewConsultasNotasDeAlumnos() {
        initComponents();

        conexion =new Conexion();
        ad= new AlumnoData(conexion);
        listAlumnos= (ArrayList<Alumno>) ad.listarAlumnosActivos();
        
        id = new InscripcionData(conexion);                  
       listaInscripcion = (ArrayList)id.listarInscripciones();
       
       md = new MateriaData(conexion);
       listaMaterias =(ArrayList)md.listarMateriasActivas();
        
        modelo1= new DefaultTableModel();
        armarCabeceraTabla();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tNotas = new javax.swing.JTable();
        btSalir = new javax.swing.JButton();
        btNuevo = new javax.swing.JButton();
        rbAprobados = new javax.swing.JRadioButton();
        rdDesaprobados = new javax.swing.JRadioButton();
        rbSinNota = new javax.swing.JRadioButton();
        rbTodos = new javax.swing.JRadioButton();

        jRadioButton1.setText("jRadioButton1");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 51));
        jLabel3.setText("LISTADO DE NOTAS");

        tNotas.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 153)));
        tNotas.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "APELLIDO", "NOMBRE", "ID MATERIA", "MATERIA", "AÃ‘O", "NOTA"
            }
        ));
        jScrollPane1.setViewportView(tNotas);

        btSalir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btSalir.setText("SALIR");
        btSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalirActionPerformed(evt);
            }
        });

        btNuevo.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btNuevo.setText("LIMPIAR");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        rbAprobados.setText("Aprobados");
        rbAprobados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbAprobadosActionPerformed(evt);
            }
        });

        rdDesaprobados.setText("Desaprobados");
        rdDesaprobados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdDesaprobadosActionPerformed(evt);
            }
        });

        rbSinNota.setText("Sin Nota");
        rbSinNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSinNotaActionPerformed(evt);
            }
        });

        rbTodos.setSelected(true);
        rbTodos.setText("Todos");
        rbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTodosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(btNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(147, 147, 147))
            .addGroup(layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 647, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(117, 117, 117)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbAprobados)
                    .addComponent(rdDesaprobados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbSinNota)
                    .addComponent(rbTodos))
                .addGap(184, 184, 184))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbAprobados)
                            .addComponent(rbSinNota)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel3)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdDesaprobados)
                    .addComponent(rbTodos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        // TODO add your handling code here:
        borraFilasTabla();
        rbTodos.setSelected(true);
        rbSinNota.setSelected(false);
        rdDesaprobados.setSelected(false);
        rbAprobados.setSelected(false);


    }//GEN-LAST:event_btNuevoActionPerformed

    private void btSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btSalirActionPerformed

    private void rbAprobadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbAprobadosActionPerformed
        // TODO add your handling code here:
        borraFilasTabla();

        rbSinNota.setSelected(false);
        rbTodos.setSelected(false);
        rdDesaprobados.setSelected(false);
        
        cargaDatosAprobados();
    }//GEN-LAST:event_rbAprobadosActionPerformed

    private void rdDesaprobadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdDesaprobadosActionPerformed
        // TODO add your handling code here:
        borraFilasTabla();
        
       
        rbSinNota.setSelected(false);
        rbAprobados.setSelected(false);
        rbTodos.setSelected(false);
        
         cargaDatosDesAprobados();
    }//GEN-LAST:event_rdDesaprobadosActionPerformed

    private void rbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTodosActionPerformed
        // TODO add your handling code here:
        borraFilasTabla();
       
        rdDesaprobados.setSelected(false);
        rbAprobados.setSelected(false);
        rbSinNota.setSelected(false);
        
         cargaTodosLosInscriptos();
    }//GEN-LAST:event_rbTodosActionPerformed

    private void rbSinNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSinNotaActionPerformed
        // TODO add your handling code here:
         borraFilasTabla();
       
        rbTodos.setSelected(false);
        rdDesaprobados.setSelected(false);
        rbAprobados.setSelected(false);
        
         listarInscripcionesSinNota();
    }//GEN-LAST:event_rbSinNotaActionPerformed

    private void armarCabeceraTabla() {
        ArrayList<Object> columnas = new ArrayList<Object>();
        columnas.add("ID ALUMNO");
        columnas.add("APELLIDO");
        columnas.add("NOMBRE");
        columnas.add("ID MATERIA");
        columnas.add("MATERIA");
        columnas.add("AÃ‘O");
        columnas.add("NOTA");
        for (Object it : columnas) {

            modelo1.addColumn(it);
        }
        tNotas.setModel(modelo1);
    }

    private void borraFilasTabla() {

        int a = modelo1.getRowCount() - 1;

        for (int i = a; i >= 0; i--) {

            modelo1.removeRow(i);
        }
    }

    private void cargaDatosAprobados() {
        borraFilasTabla();

        ArrayList<Inscripcion> lista = (ArrayList) id.alumnosAprobados();

        for (Inscripcion i : lista) {

            modelo1.addRow(new Object[]{i.getAlumno().getId_alumno(), i.getAlumno().getApellido(), i.getAlumno().getNombre(), i.getMateria().getId_materia(), i.getMateria().getNombre(), i.getMateria().getAnio(), i.getNota()});
        }
    }

    private void cargaDatosDesAprobados() {
        borraFilasTabla();

        ArrayList<Inscripcion> lista = (ArrayList) id.alumnosDesaprobados();

        for (Inscripcion i : lista) {

            modelo1.addRow(new Object[]{i.getAlumno().getId_alumno(), i.getAlumno().getApellido(), i.getAlumno().getNombre(), i.getMateria().getId_materia(), i.getMateria().getNombre(), i.getMateria().getAnio(), i.getNota()});
        }
    }

    private void cargaTodosLosInscriptos() {
        borraFilasTabla();

        ArrayList<Inscripcion> lista = (ArrayList) id.listarInscripciones();

        for (Inscripcion i : lista) {

            modelo1.addRow(new Object[]{i.getAlumno().getId_alumno(), i.getAlumno().getApellido(), i.getAlumno().getNombre(), i.getMateria().getId_materia(), i.getMateria().getNombre(), i.getMateria().getAnio(), i.getNota()});
        }
    }

    private void listarInscripcionesSinNota() {
        borraFilasTabla();

        ArrayList<Inscripcion> lista = (ArrayList) id.listarInscripcionesSinNota();

        for (Inscripcion i : lista) {

            modelo1.addRow(new Object[]{i.getAlumno().getId_alumno(), i.getAlumno().getApellido(), i.getAlumno().getNombre(), i.getMateria().getId_materia(), i.getMateria().getNombre(), i.getMateria().getAnio(), i.getNota()});
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btNuevo;
    private javax.swing.JButton btSalir;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbAprobados;
    private javax.swing.JRadioButton rbSinNota;
    private javax.swing.JRadioButton rbTodos;
    private javax.swing.JRadioButton rdDesaprobados;
    private javax.swing.JTable tNotas;
    // End of variables declaration//GEN-END:variables
}
